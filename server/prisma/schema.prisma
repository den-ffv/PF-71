// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstname String?
  lastname  String?
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  portfolioWorks PortfolioWork[]

  @@map("category")
}

model Technology {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  logoUrl     String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  portfolioWorks            PortfolioWork[]
  PortfolioWorkToTechnology PortfolioWorkToTechnology[]

  @@map("technology")
}

model PortfolioWork {
  id                        Int                         @id @default(autoincrement())
  title                     String
  description               String?
  imageUrl                  String?
  projectUrl                String?
  category_id               Int?
  category                  Category?                   @relation(fields: [category_id], references: [id], onDelete: SetNull)
  technologies              Technology[]
  dateCompleted             DateTime?
  isFeatured                Boolean                     @default(false)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt
  PortfolioWorkToTechnology PortfolioWorkToTechnology[]

  @@map("portfolio_work")
}

model PortfolioWorkToTechnology {
  id                Int           @id @default(autoincrement())
  portfolio_work_id Int
  portfolio_work    PortfolioWork @relation(fields: [portfolio_work_id], references: [id])
  technology_id     Int
  technology        Technology    @relation(fields: [technology_id], references: [id])

  @@map("portfolio_work_to_technology")
}
