// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Autor {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstname String
  lastname  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  notes Note[] @relation("NoteToAutor")

  @@map("autor")
}

model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  autor_id  Int
  autor     Autor    @relation("NoteToAutor", fields: [autor_id], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("note")
}

model About {
  id          Int      @id @default(autoincrement())
  title       String
  summery     String
  description String
  image_url   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("about")
}

model Contact {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  contact_url String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("contact")
}

model PortfolioWork {
  id             Int          @id @default(autoincrement())
  title          String
  description    String
  image_url      String?
  project_url    String?
  category_id    Int?
  category       Category?    @relation(fields: [category_id], references: [id], onDelete: SetNull)
  technologies   Technology[]
  date_completed DateTime?
  is_featured    Boolean      @default(false)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  PortfolioWorkToTechnology PortfolioWorkToTechnology[]

  @@map("portfolio_work")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  portfolioWorks PortfolioWork[]

  @@map("category")
}

model Technology {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  logo_url    String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  portfolioWorks            PortfolioWork[]
  PortfolioWorkToTechnology PortfolioWorkToTechnology[]

  @@map("technology")
}

model PortfolioWorkToTechnology {
  id                Int           @id @default(autoincrement())
  portfolio_work_id Int
  portfolio_work    PortfolioWork @relation(fields: [portfolio_work_id], references: [id])
  technology_id     Int
  technology        Technology    @relation(fields: [technology_id], references: [id])

  @@map("portfolio_work_to_technology")
}
